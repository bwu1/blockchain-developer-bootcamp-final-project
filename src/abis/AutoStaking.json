{
  "contractName": "AutoStaking",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "daiToken",
      "outputs": [
        {
          "internalType": "contract DaiToken",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "stakingContract",
      "outputs": [
        {
          "internalType": "contract StakingContract",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "staking_interation_counter",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "claim_rewards",
      "outputs": [
        {
          "internalType": "bool",
          "name": "success",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "unstake",
      "outputs": [
        {
          "internalType": "bool",
          "name": "success",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "stake",
      "outputs": [
        {
          "internalType": "bool",
          "name": "success",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "terminate_staking",
      "outputs": [
        {
          "internalType": "bool",
          "name": "success",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_staking_address",
          "type": "address"
        }
      ],
      "name": "link_staking_farm",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract DaiToken",
          "name": "_daiToken",
          "type": "address"
        }
      ],
      "name": "link_protocol_token",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "update_staking_interation_counter",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"claim_rewards\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"daiToken\",\"outputs\":[{\"internalType\":\"contract DaiToken\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract DaiToken\",\"name\":\"_daiToken\",\"type\":\"address\"}],\"name\":\"link_protocol_token\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_staking_address\",\"type\":\"address\"}],\"name\":\"link_staking_farm\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"stake\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakingContract\",\"outputs\":[{\"internalType\":\"contract StakingContract\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"staking_interation_counter\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"terminate_staking\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"unstake\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"update_staking_interation_counter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/C/Users/Bofan/defi_tutorial/src/contracts/AutoStaking.sol\":\"AutoStaking\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/C/Users/Bofan/defi_tutorial/src/contracts/AutoStaking.sol\":{\"keccak256\":\"0xb66f8d1a1fea000ae79dcf6ca35c8fbbbbbad00e22b1a194678d198100c74f83\",\"license\":\"Unlicensed\",\"urls\":[\"bzz-raw://673cbc0bebcbfb656c22afd4ef0bb011ac04c0e4381d102e6ff4870341a0e4bf\",\"dweb:/ipfs/QmRL1GFB84pPkQYkcugv1FPPatDYZgQUhtHoLqvkBkcT7G\"]},\"/C/Users/Bofan/defi_tutorial/src/contracts/DaiToken.sol\":{\"keccak256\":\"0xb158d1a3b1050afe876e099ccc7e35491377ba7d7eaf6fa1c2636816eeb43d48\",\"license\":\"Unlicensed\",\"urls\":[\"bzz-raw://443852f98f5047d0c459c93bc508248179fd39f78ba25d0fec9aed198be0e23f\",\"dweb:/ipfs/QmcSH1jGqAuodru745iLYdRXUoXtjyRmg47cbFZ7EGdVpX\"]}},\"version\":1}",
  "bytecode": "0x60806040526040518060400160405280600b81526020017f4175746f5374616b696e670000000000000000000000000000000000000000008152506000908051906020019061004f9291906100a3565b5034801561005c57600080fd5b5033600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061014e565b828054600181600116156101000203166002900490600052602060002090601f0160209004810192826100d95760008555610120565b82601f106100f257805160ff1916838001178555610120565b82800160010185558215610120579182015b8281111561011f578251825591602001919060010190610104565b5b50905061012d9190610131565b5090565b5b8082111561014a576000816000905550600101610132565b5090565b610e288061015d6000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c80639b048358116100715780639b0483581461017d578063a694fc3a14610187578063be22f546146101b7578063c5eb2f68146101d5578063e6f1daf2146101f1578063ee99205c1461020f576100b4565b806306fdde03146100b95780630d3e3651146100d757806320789a8e146100f55780632e17de781461011157806387c545af146101415780638da5cb5b1461015f575b600080fd5b6100c161022d565b6040516100ce9190610c0a565b60405180910390f35b6100df6102cb565b6040516100ec9190610c2c565b60405180910390f35b61010f600480360381019061010a9190610a67565b6102d1565b005b61012b60048036038101906101269190610a90565b610370565b6040516101389190610bb9565b60405180910390f35b61014961040b565b6040516101569190610bb9565b60405180910390f35b610167610414565b6040516101749190610b75565b60405180910390f35b61018561043a565b005b6101a1600480360381019061019c9190610a90565b6104a3565b6040516101ae9190610bb9565b60405180910390f35b6101bf610610565b6040516101cc9190610bd4565b60405180910390f35b6101ef60048036038101906101ea9190610a15565b610636565b005b6101f96106d5565b6040516102069190610bb9565b60405180910390f35b6102176108e1565b6040516102249190610bef565b60405180910390f35b60008054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156102c35780601f10610298576101008083540402835291602001916102c3565b820191906000526020600020905b8154815290600101906020018083116102a657829003601f168201915b505050505081565b60045481565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461032b5761036d565b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b50565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663448f42e18360006040518363ffffffff1660e01b81526004016103d0929190610c47565b600060405180830381600087803b1580156103ea57600080fd5b505af11580156103fe573d6000803e3d6000fd5b5050505060019050919050565b60006001905090565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610494576104a1565b6001600454016004819055505b565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663095ea7b3600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16846040518363ffffffff1660e01b8152600401610524929190610b90565b602060405180830381600087803b15801561053e57600080fd5b505af1158015610552573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105769190610a3e565b50600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166345c15b428360006040518363ffffffff1660e01b81526004016105d5929190610c47565b600060405180830381600087803b1580156105ef57600080fd5b505af1158015610603573d6000803e3d6000fd5b5050505060019050919050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610690576106d2565b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b50565b600080600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016107339190610b75565b60206040518083038186803b15801561074b57600080fd5b505afa15801561075f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107839190610ab9565b9050600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16638222cf206040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156107ef57600080fd5b505af1158015610803573d6000803e3d6000fd5b505050506000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016108649190610b75565b60206040518083038186803b15801561087c57600080fd5b505afa158015610890573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108b49190610ab9565b905060006108cb838361090790919063ffffffff16565b90506108d6816104a3565b506001935050505090565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600061094983836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250610951565b905092915050565b6000838311158290610999576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109909190610c0a565b60405180910390fd5b5060008385039050809150509392505050565b6000813590506109bb81610d96565b92915050565b6000815190506109d081610dad565b92915050565b6000813590506109e581610dc4565b92915050565b6000813590506109fa81610ddb565b92915050565b600081519050610a0f81610ddb565b92915050565b600060208284031215610a2757600080fd5b6000610a35848285016109ac565b91505092915050565b600060208284031215610a5057600080fd5b6000610a5e848285016109c1565b91505092915050565b600060208284031215610a7957600080fd5b6000610a87848285016109d6565b91505092915050565b600060208284031215610aa257600080fd5b6000610ab0848285016109eb565b91505092915050565b600060208284031215610acb57600080fd5b6000610ad984828501610a00565b91505092915050565b610aeb81610c8c565b82525050565b610afa81610cb0565b82525050565b610b0981610cf8565b82525050565b610b1881610d1c565b82525050565b610b2781610d40565b82525050565b6000610b3882610c70565b610b428185610c7b565b9350610b52818560208601610d52565b610b5b81610d85565b840191505092915050565b610b6f81610cee565b82525050565b6000602082019050610b8a6000830184610ae2565b92915050565b6000604082019050610ba56000830185610ae2565b610bb26020830184610b66565b9392505050565b6000602082019050610bce6000830184610af1565b92915050565b6000602082019050610be96000830184610b00565b92915050565b6000602082019050610c046000830184610b0f565b92915050565b60006020820190508181036000830152610c248184610b2d565b905092915050565b6000602082019050610c416000830184610b66565b92915050565b6000604082019050610c5c6000830185610b66565b610c696020830184610b1e565b9392505050565b600081519050919050565b600082825260208201905092915050565b6000610c9782610cce565b9050919050565b6000610ca982610cce565b9050919050565b60008115159050919050565b6000610cc782610c9e565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000610d0382610d0a565b9050919050565b6000610d1582610cce565b9050919050565b6000610d2782610d2e565b9050919050565b6000610d3982610cce565b9050919050565b6000610d4b82610cee565b9050919050565b60005b83811015610d70578082015181840152602081019050610d55565b83811115610d7f576000848401525b50505050565b6000601f19601f8301169050919050565b610d9f81610c8c565b8114610daa57600080fd5b50565b610db681610cb0565b8114610dc157600080fd5b50565b610dcd81610cbc565b8114610dd857600080fd5b50565b610de481610cee565b8114610def57600080fd5b5056fea2646970667358221220cc3ff409dcc77ce862491dd4dd6c3123360315268208a4823ad1d1e8826a4be664736f6c63430007060033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100b45760003560e01c80639b048358116100715780639b0483581461017d578063a694fc3a14610187578063be22f546146101b7578063c5eb2f68146101d5578063e6f1daf2146101f1578063ee99205c1461020f576100b4565b806306fdde03146100b95780630d3e3651146100d757806320789a8e146100f55780632e17de781461011157806387c545af146101415780638da5cb5b1461015f575b600080fd5b6100c161022d565b6040516100ce9190610c0a565b60405180910390f35b6100df6102cb565b6040516100ec9190610c2c565b60405180910390f35b61010f600480360381019061010a9190610a67565b6102d1565b005b61012b60048036038101906101269190610a90565b610370565b6040516101389190610bb9565b60405180910390f35b61014961040b565b6040516101569190610bb9565b60405180910390f35b610167610414565b6040516101749190610b75565b60405180910390f35b61018561043a565b005b6101a1600480360381019061019c9190610a90565b6104a3565b6040516101ae9190610bb9565b60405180910390f35b6101bf610610565b6040516101cc9190610bd4565b60405180910390f35b6101ef60048036038101906101ea9190610a15565b610636565b005b6101f96106d5565b6040516102069190610bb9565b60405180910390f35b6102176108e1565b6040516102249190610bef565b60405180910390f35b60008054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156102c35780601f10610298576101008083540402835291602001916102c3565b820191906000526020600020905b8154815290600101906020018083116102a657829003601f168201915b505050505081565b60045481565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461032b5761036d565b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b50565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663448f42e18360006040518363ffffffff1660e01b81526004016103d0929190610c47565b600060405180830381600087803b1580156103ea57600080fd5b505af11580156103fe573d6000803e3d6000fd5b5050505060019050919050565b60006001905090565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610494576104a1565b6001600454016004819055505b565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663095ea7b3600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16846040518363ffffffff1660e01b8152600401610524929190610b90565b602060405180830381600087803b15801561053e57600080fd5b505af1158015610552573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105769190610a3e565b50600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166345c15b428360006040518363ffffffff1660e01b81526004016105d5929190610c47565b600060405180830381600087803b1580156105ef57600080fd5b505af1158015610603573d6000803e3d6000fd5b5050505060019050919050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610690576106d2565b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b50565b600080600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016107339190610b75565b60206040518083038186803b15801561074b57600080fd5b505afa15801561075f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107839190610ab9565b9050600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16638222cf206040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156107ef57600080fd5b505af1158015610803573d6000803e3d6000fd5b505050506000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016108649190610b75565b60206040518083038186803b15801561087c57600080fd5b505afa158015610890573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108b49190610ab9565b905060006108cb838361090790919063ffffffff16565b90506108d6816104a3565b506001935050505090565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600061094983836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250610951565b905092915050565b6000838311158290610999576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109909190610c0a565b60405180910390fd5b5060008385039050809150509392505050565b6000813590506109bb81610d96565b92915050565b6000815190506109d081610dad565b92915050565b6000813590506109e581610dc4565b92915050565b6000813590506109fa81610ddb565b92915050565b600081519050610a0f81610ddb565b92915050565b600060208284031215610a2757600080fd5b6000610a35848285016109ac565b91505092915050565b600060208284031215610a5057600080fd5b6000610a5e848285016109c1565b91505092915050565b600060208284031215610a7957600080fd5b6000610a87848285016109d6565b91505092915050565b600060208284031215610aa257600080fd5b6000610ab0848285016109eb565b91505092915050565b600060208284031215610acb57600080fd5b6000610ad984828501610a00565b91505092915050565b610aeb81610c8c565b82525050565b610afa81610cb0565b82525050565b610b0981610cf8565b82525050565b610b1881610d1c565b82525050565b610b2781610d40565b82525050565b6000610b3882610c70565b610b428185610c7b565b9350610b52818560208601610d52565b610b5b81610d85565b840191505092915050565b610b6f81610cee565b82525050565b6000602082019050610b8a6000830184610ae2565b92915050565b6000604082019050610ba56000830185610ae2565b610bb26020830184610b66565b9392505050565b6000602082019050610bce6000830184610af1565b92915050565b6000602082019050610be96000830184610b00565b92915050565b6000602082019050610c046000830184610b0f565b92915050565b60006020820190508181036000830152610c248184610b2d565b905092915050565b6000602082019050610c416000830184610b66565b92915050565b6000604082019050610c5c6000830185610b66565b610c696020830184610b1e565b9392505050565b600081519050919050565b600082825260208201905092915050565b6000610c9782610cce565b9050919050565b6000610ca982610cce565b9050919050565b60008115159050919050565b6000610cc782610c9e565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000610d0382610d0a565b9050919050565b6000610d1582610cce565b9050919050565b6000610d2782610d2e565b9050919050565b6000610d3982610cce565b9050919050565b6000610d4b82610cee565b9050919050565b60005b83811015610d70578082015181840152602081019050610d55565b83811115610d7f576000848401525b50505050565b6000601f19601f8301169050919050565b610d9f81610c8c565b8114610daa57600080fd5b50565b610db681610cb0565b8114610dc157600080fd5b50565b610dcd81610cbc565b8114610dd857600080fd5b50565b610de481610cee565b8114610def57600080fd5b5056fea2646970667358221220cc3ff409dcc77ce862491dd4dd6c3123360315268208a4823ad1d1e8826a4be664736f6c63430007060033",
  "immutableReferences": {},
  "sourceMap": "555:2736:0:-:0;;;580:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;792:49;;;;;;;;;;826:10;818:5;;:18;;;;;;;;;;;;;;;;;;555:2736;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "555:2736:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;580:34;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;742:38;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2985:129;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1786:202;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2272:196;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;688:20;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3117:164;;;:::i;:::-;;1991:278;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;618:24;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2808:174;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1059:724;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;646:38;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;580:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;742:38::-;;;;:::o;2985:129::-;3061:5;;;;;;;;;;;3049:17;;:10;:17;;;3046:39;;3073:7;;3046:39;3100:9;3089:8;;:20;;;;;;;;;;;;;;;;;;2985:129;;:::o;1786:202::-;1835:12;1909:15;;;;;;;;;;;:47;;;1957:6;1965:1;1909:58;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1979:4;1972:11;;1786:202;;;:::o;2272:196::-;2317:12;2459:4;2452:11;;2272:196;:::o;688:20::-;;;;;;;;;;;;;:::o;3117:164::-;3189:5;;;;;;;;;;;3177:17;;:10;:17;;;3174:39;;3201:7;;3174:39;3275:1;3246:26;;:30;3217:26;:59;;;;3117:164;:::o;1991:278::-;2038:12;2110:8;;;;;;;;;;;:16;;;2135:15;;;;;;;;;;;2153:6;2110:50;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2193:15;;;;;;;;;;;:44;;;2238:6;2246:1;2193:55;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2260:4;2253:11;;1991:278;;;:::o;618:24::-;;;;;;;;;;;;;:::o;2808:174::-;2887:5;;;;;;;;;;;2875:17;;:10;:17;;;2872:39;;2899:7;;2872:39;2955:16;2921:15;;:51;;;;;;;;;;;;;;;;;;2808:174;;:::o;1059:724::-;1100:12;1476:22;1501:8;;;;;;;;;;;:18;;;1528:4;1501:33;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1476:58;;1539:15;;;;;;;;;;;:38;;;:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1590:26;1619:8;;;;;;;;;;;:18;;;1646:4;1619:33;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1590:62;;1669:24;1696:38;1719:14;1696:18;:22;;:38;;;;:::i;:::-;1669:65;;1739:23;1745:16;1739:5;:23::i;:::-;;1774:4;1767:11;;;;;1059:724;:::o;646:38::-;;;;;;;;;;;;;:::o;4066:136:1:-;4124:7;4151:43;4155:1;4158;4151:43;;;;;;;;;;;;;;;;;:3;:43::i;:::-;4144:50;;4066:136;;;;:::o;4505:192::-;4591:7;4624:1;4619;:6;;4627:12;4611:29;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;4651:9;4667:1;4663;:5;4651:17;;4688:1;4681:8;;;4505:192;;;;;:::o;7:139:11:-;;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;59:87;;;;:::o;152:137::-;;237:6;231:13;222:22;;253:30;277:5;253:30;:::i;:::-;212:77;;;;:::o;295:173::-;;396:6;383:20;374:29;;412:50;456:5;412:50;:::i;:::-;364:104;;;;:::o;474:139::-;;558:6;545:20;536:29;;574:33;601:5;574:33;:::i;:::-;526:87;;;;:::o;619:143::-;;707:6;701:13;692:22;;723:33;750:5;723:33;:::i;:::-;682:80;;;;:::o;768:262::-;;876:2;864:9;855:7;851:23;847:32;844:2;;;892:1;889;882:12;844:2;935:1;960:53;1005:7;996:6;985:9;981:22;960:53;:::i;:::-;950:63;;906:117;834:196;;;;:::o;1036:278::-;;1152:2;1140:9;1131:7;1127:23;1123:32;1120:2;;;1168:1;1165;1158:12;1120:2;1211:1;1236:61;1289:7;1280:6;1269:9;1265:22;1236:61;:::i;:::-;1226:71;;1182:125;1110:204;;;;:::o;1320:296::-;;1445:2;1433:9;1424:7;1420:23;1416:32;1413:2;;;1461:1;1458;1451:12;1413:2;1504:1;1529:70;1591:7;1582:6;1571:9;1567:22;1529:70;:::i;:::-;1519:80;;1475:134;1403:213;;;;:::o;1622:262::-;;1730:2;1718:9;1709:7;1705:23;1701:32;1698:2;;;1746:1;1743;1736:12;1698:2;1789:1;1814:53;1859:7;1850:6;1839:9;1835:22;1814:53;:::i;:::-;1804:63;;1760:117;1688:196;;;;:::o;1890:284::-;;2009:2;1997:9;1988:7;1984:23;1980:32;1977:2;;;2025:1;2022;2015:12;1977:2;2068:1;2093:64;2149:7;2140:6;2129:9;2125:22;2093:64;:::i;:::-;2083:74;;2039:128;1967:207;;;;:::o;2180:118::-;2267:24;2285:5;2267:24;:::i;:::-;2262:3;2255:37;2245:53;;:::o;2304:109::-;2385:21;2400:5;2385:21;:::i;:::-;2380:3;2373:34;2363:50;;:::o;2419:181::-;2531:62;2587:5;2531:62;:::i;:::-;2526:3;2519:75;2509:91;;:::o;2606:175::-;2715:59;2768:5;2715:59;:::i;:::-;2710:3;2703:72;2693:88;;:::o;2787:147::-;2882:45;2921:5;2882:45;:::i;:::-;2877:3;2870:58;2860:74;;:::o;2940:364::-;;3056:39;3089:5;3056:39;:::i;:::-;3111:71;3175:6;3170:3;3111:71;:::i;:::-;3104:78;;3191:52;3236:6;3231:3;3224:4;3217:5;3213:16;3191:52;:::i;:::-;3268:29;3290:6;3268:29;:::i;:::-;3263:3;3259:39;3252:46;;3032:272;;;;;:::o;3310:118::-;3397:24;3415:5;3397:24;:::i;:::-;3392:3;3385:37;3375:53;;:::o;3434:222::-;;3565:2;3554:9;3550:18;3542:26;;3578:71;3646:1;3635:9;3631:17;3622:6;3578:71;:::i;:::-;3532:124;;;;:::o;3662:332::-;;3821:2;3810:9;3806:18;3798:26;;3834:71;3902:1;3891:9;3887:17;3878:6;3834:71;:::i;:::-;3915:72;3983:2;3972:9;3968:18;3959:6;3915:72;:::i;:::-;3788:206;;;;;:::o;4000:210::-;;4125:2;4114:9;4110:18;4102:26;;4138:65;4200:1;4189:9;4185:17;4176:6;4138:65;:::i;:::-;4092:118;;;;:::o;4216:272::-;;4372:2;4361:9;4357:18;4349:26;;4385:96;4478:1;4467:9;4463:17;4454:6;4385:96;:::i;:::-;4339:149;;;;:::o;4494:266::-;;4647:2;4636:9;4632:18;4624:26;;4660:93;4750:1;4739:9;4735:17;4726:6;4660:93;:::i;:::-;4614:146;;;;:::o;4766:313::-;;4917:2;4906:9;4902:18;4894:26;;4966:9;4960:4;4956:20;4952:1;4941:9;4937:17;4930:47;4994:78;5067:4;5058:6;4994:78;:::i;:::-;4986:86;;4884:195;;;;:::o;5085:222::-;;5216:2;5205:9;5201:18;5193:26;;5229:71;5297:1;5286:9;5282:17;5273:6;5229:71;:::i;:::-;5183:124;;;;:::o;5313:348::-;;5480:2;5469:9;5465:18;5457:26;;5493:71;5561:1;5550:9;5546:17;5537:6;5493:71;:::i;:::-;5574:80;5650:2;5639:9;5635:18;5626:6;5574:80;:::i;:::-;5447:214;;;;;:::o;5667:99::-;;5753:5;5747:12;5737:22;;5726:40;;;:::o;5772:169::-;;5890:6;5885:3;5878:19;5930:4;5925:3;5921:14;5906:29;;5868:73;;;;:::o;5947:96::-;;6013:24;6031:5;6013:24;:::i;:::-;6002:35;;5992:51;;;:::o;6049:104::-;;6123:24;6141:5;6123:24;:::i;:::-;6112:35;;6102:51;;;:::o;6159:90::-;;6236:5;6229:13;6222:21;6211:32;;6201:48;;;:::o;6255:121::-;;6338:32;6364:5;6338:32;:::i;:::-;6327:43;;6317:59;;;:::o;6382:126::-;;6459:42;6452:5;6448:54;6437:65;;6427:81;;;:::o;6514:77::-;;6580:5;6569:16;;6559:32;;;:::o;6597:168::-;;6705:54;6753:5;6705:54;:::i;:::-;6692:67;;6682:83;;;:::o;6771:130::-;;6871:24;6889:5;6871:24;:::i;:::-;6858:37;;6848:53;;;:::o;6907:170::-;;7012:59;7065:5;7012:59;:::i;:::-;6999:72;;6989:88;;;:::o;7083:135::-;;7188:24;7206:5;7188:24;:::i;:::-;7175:37;;7165:53;;;:::o;7224:121::-;;7315:24;7333:5;7315:24;:::i;:::-;7302:37;;7292:53;;;:::o;7351:307::-;7419:1;7429:113;7443:6;7440:1;7437:13;7429:113;;;7528:1;7523:3;7519:11;7513:18;7509:1;7504:3;7500:11;7493:39;7465:2;7462:1;7458:10;7453:15;;7429:113;;;7560:6;7557:1;7554:13;7551:2;;;7640:1;7631:6;7626:3;7622:16;7615:27;7551:2;7400:258;;;;:::o;7664:102::-;;7756:2;7752:7;7747:2;7740:5;7736:14;7732:28;7722:38;;7712:54;;;:::o;7772:122::-;7845:24;7863:5;7845:24;:::i;:::-;7838:5;7835:35;7825:2;;7884:1;7881;7874:12;7825:2;7815:79;:::o;7900:116::-;7970:21;7985:5;7970:21;:::i;:::-;7963:5;7960:32;7950:2;;8006:1;8003;7996:12;7950:2;7940:76;:::o;8022:156::-;8112:41;8147:5;8112:41;:::i;:::-;8105:5;8102:52;8092:2;;8168:1;8165;8158:12;8092:2;8082:96;:::o;8184:122::-;8257:24;8275:5;8257:24;:::i;:::-;8250:5;8247:35;8237:2;;8296:1;8293;8286:12;8237:2;8227:79;:::o",
  "source": "pragma solidity ^0.7.6;\r\n//pragma solidity ^0.6.12;\r\n// SPDX-License-Identifier: Unlicensed\r\npragma experimental ABIEncoderV2;\r\nimport \"./DaiToken.sol\";\r\n\r\n\r\n\r\n//This will be different for each different protocol\r\ninterface StakingContract {\r\n    function transfer_tax_to_reward_pool(uint _amount) external;\r\n\tfunction collect_staker_rewards() external;\r\n\tfunction add_stake_charity_allocation(uint _amount, uint selected_charity_id) external;\r\n\tfunction remove_stake_charity_allocation(uint _amount, uint selected_charity_id) external;\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\ncontract AutoStaking {\r\n\tstring public name = \"AutoStaking\";\r\n\tDaiToken public daiToken;\r\n\tStakingContract public stakingContract;\r\n\taddress public owner;\r\n\tusing SafeMath for uint256;\r\n\tuint public staking_interation_counter;\r\n\r\n\r\n\r\n\r\n\tconstructor() public {\r\n\t\towner = msg.sender;\r\n\t}\r\n\r\n\r\n\r\n\r\n\t//1. After contract creation, manually transfer tokens needed for staking from owner's wallet to this smart contract\r\n\t//2. Call stake function below to stake this smart contract's initial token balance\r\n\r\n\tfunction claim_rewards() public returns (bool success) {\r\n\t//use a cron job to repeatedly call this function externally\r\n\r\n\t\t//1. check amount of claimable rewards of the target protocol\r\n\t\t//2. if above a certain amount, claim rewards to this smart contract\r\n\t\t//3. programmatically sell this smart contract's accumulated rewards on a DEX\r\n\t\t//4. (optional) call the stake function below to auto-compound staking\r\n\t\tuint256 initialBalance = daiToken.balanceOf(address(this));\r\n\t\tstakingContract.collect_staker_rewards();\r\n        uint256 post_claim_Balance = daiToken.balanceOf(address(this));\r\n\r\n\r\n\r\n        uint256 collected_amount = post_claim_Balance.sub(initialBalance);\r\n\t\tstake(collected_amount);\r\n\t\treturn true;\r\n\t}\r\n\tfunction unstake(uint256 amount) public returns (bool success) {\r\n\t\t//1. execute unstaking logic in the target protocol\r\n\t\tstakingContract.remove_stake_charity_allocation(amount, 0);\r\n\t\treturn true;\r\n\t}\r\n\tfunction stake(uint256 amount) public returns (bool success) {\r\n\t\t//1. execute staking logic in the target protocol\r\n\t\tdaiToken.approve(address(stakingContract), amount);//daiToken.uniswapV2Router()\r\n\t\tstakingContract.add_stake_charity_allocation(amount, 0);\r\n\t\treturn true;\r\n\t}\r\n\tfunction terminate_staking() public returns (bool success) {\r\n\t\t//1. call unstake function\r\n\t\t//2. transfer tokens from this smart contract back into the owner's wallet address\r\n\t\treturn true;\r\n\t}\r\n\r\n\r\n\r\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    function link_staking_farm(address _staking_address) public{\r\n\t\tif(msg.sender!=owner){\r\n\t\t\treturn;\r\n\t\t}\r\n        stakingContract = StakingContract(_staking_address);\r\n\r\n    }\r\n\tfunction link_protocol_token(DaiToken _daiToken) public {\r\n\t\tif(msg.sender!=owner){\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tdaiToken = _daiToken;\r\n\t}\r\n\tfunction update_staking_interation_counter() public {\r\n\t\tif(msg.sender!=owner){\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tstaking_interation_counter = staking_interation_counter + 1;\r\n\t}\r\n\r\n\r\n\t\r\n}",
  "sourcePath": "C:/Users/Bofan/defi_tutorial/src/contracts/AutoStaking.sol",
  "ast": {
    "absolutePath": "/C/Users/Bofan/defi_tutorial/src/contracts/AutoStaking.sol",
    "exportedSymbols": {
      "Address": [
        698
      ],
      "AutoStaking": [
        199
      ],
      "Context": [
        496
      ],
      "DaiToken": [
        2758
      ],
      "IERC20": [
        281
      ],
      "ISwapRouter": [
        1680
      ],
      "IUniswapV2Factory": [
        940
      ],
      "IUniswapV2Pair": [
        1180
      ],
      "IUniswapV2Router01": [
        1486
      ],
      "IUniswapV2Router02": [
        1571
      ],
      "IUniswapV3SwapCallback": [
        1583
      ],
      "Ownable": [
        879
      ],
      "SafeMath": [
        475
      ],
      "StakingContract": [
        26
      ],
      "TokenFarm_pointer": [
        1686
      ]
    },
    "id": 200,
    "license": "Unlicensed",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.7",
          ".6"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:0"
      },
      {
        "id": 2,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "93:33:0"
      },
      {
        "absolutePath": "/C/Users/Bofan/defi_tutorial/src/contracts/DaiToken.sol",
        "file": "./DaiToken.sol",
        "id": 3,
        "nodeType": "ImportDirective",
        "scope": 200,
        "sourceUnit": 2759,
        "src": "128:24:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "interface",
        "fullyImplemented": false,
        "id": 26,
        "linearizedBaseContracts": [
          26
        ],
        "name": "StakingContract",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "functionSelector": "cfbf8fbf",
            "id": 8,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "transfer_tax_to_reward_pool",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 8,
                  "src": "284:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "284:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "283:14:0"
            },
            "returnParameters": {
              "id": 7,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "306:0:0"
            },
            "scope": 26,
            "src": "247:60:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "functionSelector": "8222cf20",
            "id": 11,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "collect_staker_rewards",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "341:2:0"
            },
            "returnParameters": {
              "id": 10,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "352:0:0"
            },
            "scope": 26,
            "src": "310:43:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "functionSelector": "45c15b42",
            "id": 18,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "add_stake_charity_allocation",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 16,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 18,
                  "src": "394:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "394:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15,
                  "mutability": "mutable",
                  "name": "selected_charity_id",
                  "nodeType": "VariableDeclaration",
                  "scope": 18,
                  "src": "408:24:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 14,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "408:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "393:40:0"
            },
            "returnParameters": {
              "id": 17,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "442:0:0"
            },
            "scope": 26,
            "src": "356:87:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "functionSelector": "448f42e1",
            "id": 25,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "remove_stake_charity_allocation",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 23,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 20,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 25,
                  "src": "487:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 19,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "487:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 22,
                  "mutability": "mutable",
                  "name": "selected_charity_id",
                  "nodeType": "VariableDeclaration",
                  "scope": 25,
                  "src": "501:24:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 21,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "501:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "486:40:0"
            },
            "returnParameters": {
              "id": 24,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "535:0:0"
            },
            "scope": 26,
            "src": "446:90:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 200,
        "src": "214:325:0"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 199,
        "linearizedBaseContracts": [
          199
        ],
        "name": "AutoStaking",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "06fdde03",
            "id": 29,
            "mutability": "mutable",
            "name": "name",
            "nodeType": "VariableDeclaration",
            "scope": 199,
            "src": "580:34:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 27,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "580:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "hexValue": "4175746f5374616b696e67",
              "id": 28,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "601:13:0",
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_b17fba57d7b77fdedbc019df5f36c9ec73803b658eadfa09530c61085d022dcb",
                "typeString": "literal_string \"AutoStaking\""
              },
              "value": "AutoStaking"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "be22f546",
            "id": 31,
            "mutability": "mutable",
            "name": "daiToken",
            "nodeType": "VariableDeclaration",
            "scope": 199,
            "src": "618:24:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_DaiToken_$2758",
              "typeString": "contract DaiToken"
            },
            "typeName": {
              "id": 30,
              "name": "DaiToken",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2758,
              "src": "618:8:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_DaiToken_$2758",
                "typeString": "contract DaiToken"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "ee99205c",
            "id": 33,
            "mutability": "mutable",
            "name": "stakingContract",
            "nodeType": "VariableDeclaration",
            "scope": 199,
            "src": "646:38:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_StakingContract_$26",
              "typeString": "contract StakingContract"
            },
            "typeName": {
              "id": 32,
              "name": "StakingContract",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 26,
              "src": "646:15:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_StakingContract_$26",
                "typeString": "contract StakingContract"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "8da5cb5b",
            "id": 35,
            "mutability": "mutable",
            "name": "owner",
            "nodeType": "VariableDeclaration",
            "scope": 199,
            "src": "688:20:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 34,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "688:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 38,
            "libraryName": {
              "id": 36,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 475,
              "src": "718:8:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$475",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "712:27:0",
            "typeName": {
              "id": 37,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "731:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "functionSelector": "0d3e3651",
            "id": 40,
            "mutability": "mutable",
            "name": "staking_interation_counter",
            "nodeType": "VariableDeclaration",
            "scope": 199,
            "src": "742:38:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 39,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "742:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 48,
              "nodeType": "Block",
              "src": "813:28:0",
              "statements": [
                {
                  "expression": {
                    "id": 46,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 43,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 35,
                      "src": "818:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 44,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "826:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 45,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "826:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "818:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 47,
                  "nodeType": "ExpressionStatement",
                  "src": "818:18:0"
                }
              ]
            },
            "id": 49,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 41,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "803:2:0"
            },
            "returnParameters": {
              "id": 42,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "813:0:0"
            },
            "scope": 199,
            "src": "792:49:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 92,
              "nodeType": "Block",
              "src": "1114:669:0",
              "statements": [
                {
                  "assignments": [
                    55
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 55,
                      "mutability": "mutable",
                      "name": "initialBalance",
                      "nodeType": "VariableDeclaration",
                      "scope": 92,
                      "src": "1476:22:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 54,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1476:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 63,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 60,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "1528:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AutoStaking_$199",
                              "typeString": "contract AutoStaking"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AutoStaking_$199",
                              "typeString": "contract AutoStaking"
                            }
                          ],
                          "id": 59,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1520:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 58,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1520:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 61,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1520:13:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 56,
                        "name": "daiToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31,
                        "src": "1501:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_DaiToken_$2758",
                          "typeString": "contract DaiToken"
                        }
                      },
                      "id": 57,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1900,
                      "src": "1501:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 62,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1501:33:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1476:58:0"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 64,
                        "name": "stakingContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33,
                        "src": "1539:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_StakingContract_$26",
                          "typeString": "contract StakingContract"
                        }
                      },
                      "id": 66,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "collect_staker_rewards",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11,
                      "src": "1539:38:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 67,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1539:40:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 68,
                  "nodeType": "ExpressionStatement",
                  "src": "1539:40:0"
                },
                {
                  "assignments": [
                    70
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 70,
                      "mutability": "mutable",
                      "name": "post_claim_Balance",
                      "nodeType": "VariableDeclaration",
                      "scope": 92,
                      "src": "1590:26:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 69,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1590:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 78,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 75,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "1646:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AutoStaking_$199",
                              "typeString": "contract AutoStaking"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AutoStaking_$199",
                              "typeString": "contract AutoStaking"
                            }
                          ],
                          "id": 74,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1638:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 73,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1638:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 76,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1638:13:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 71,
                        "name": "daiToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31,
                        "src": "1619:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_DaiToken_$2758",
                          "typeString": "contract DaiToken"
                        }
                      },
                      "id": 72,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1900,
                      "src": "1619:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 77,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1619:33:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1590:62:0"
                },
                {
                  "assignments": [
                    80
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 80,
                      "mutability": "mutable",
                      "name": "collected_amount",
                      "nodeType": "VariableDeclaration",
                      "scope": 92,
                      "src": "1669:24:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 79,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1669:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 85,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 83,
                        "name": "initialBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 55,
                        "src": "1719:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 81,
                        "name": "post_claim_Balance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 70,
                        "src": "1696:18:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 82,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sub",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 325,
                      "src": "1696:22:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 84,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1696:38:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1669:65:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 87,
                        "name": "collected_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80,
                        "src": "1745:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 86,
                      "name": "stake",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 137,
                      "src": "1739:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (uint256) returns (bool)"
                      }
                    },
                    "id": 88,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1739:23:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 89,
                  "nodeType": "ExpressionStatement",
                  "src": "1739:23:0"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 90,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1774:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 53,
                  "id": 91,
                  "nodeType": "Return",
                  "src": "1767:11:0"
                }
              ]
            },
            "functionSelector": "e6f1daf2",
            "id": 93,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "claim_rewards",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 50,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1081:2:0"
            },
            "returnParameters": {
              "id": 53,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 52,
                  "mutability": "mutable",
                  "name": "success",
                  "nodeType": "VariableDeclaration",
                  "scope": 93,
                  "src": "1100:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 51,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1100:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1099:14:0"
            },
            "scope": 199,
            "src": "1059:724:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 109,
              "nodeType": "Block",
              "src": "1849:139:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 103,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 95,
                        "src": "1957:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 104,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1965:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 100,
                        "name": "stakingContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33,
                        "src": "1909:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_StakingContract_$26",
                          "typeString": "contract StakingContract"
                        }
                      },
                      "id": 102,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "remove_stake_charity_allocation",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25,
                      "src": "1909:47:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256) external"
                      }
                    },
                    "id": 105,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1909:58:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 106,
                  "nodeType": "ExpressionStatement",
                  "src": "1909:58:0"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 107,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1979:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 99,
                  "id": 108,
                  "nodeType": "Return",
                  "src": "1972:11:0"
                }
              ]
            },
            "functionSelector": "2e17de78",
            "id": 110,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "unstake",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 96,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 95,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 110,
                  "src": "1803:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 94,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1803:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1802:16:0"
            },
            "returnParameters": {
              "id": 99,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 98,
                  "mutability": "mutable",
                  "name": "success",
                  "nodeType": "VariableDeclaration",
                  "scope": 110,
                  "src": "1835:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 97,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1835:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1834:14:0"
            },
            "scope": 199,
            "src": "1786:202:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 136,
              "nodeType": "Block",
              "src": "2052:217:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 122,
                            "name": "stakingContract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33,
                            "src": "2135:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_StakingContract_$26",
                              "typeString": "contract StakingContract"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_StakingContract_$26",
                              "typeString": "contract StakingContract"
                            }
                          ],
                          "id": 121,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2127:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 120,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2127:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 123,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2127:24:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 124,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 112,
                        "src": "2153:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 117,
                        "name": "daiToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31,
                        "src": "2110:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_DaiToken_$2758",
                          "typeString": "contract DaiToken"
                        }
                      },
                      "id": 119,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2025,
                      "src": "2110:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 125,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2110:50:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 126,
                  "nodeType": "ExpressionStatement",
                  "src": "2110:50:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 130,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 112,
                        "src": "2238:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 131,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2246:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 127,
                        "name": "stakingContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33,
                        "src": "2193:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_StakingContract_$26",
                          "typeString": "contract StakingContract"
                        }
                      },
                      "id": 129,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "add_stake_charity_allocation",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 18,
                      "src": "2193:44:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256) external"
                      }
                    },
                    "id": 132,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2193:55:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 133,
                  "nodeType": "ExpressionStatement",
                  "src": "2193:55:0"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 134,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2260:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 116,
                  "id": 135,
                  "nodeType": "Return",
                  "src": "2253:11:0"
                }
              ]
            },
            "functionSelector": "a694fc3a",
            "id": 137,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "stake",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 113,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 112,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 137,
                  "src": "2006:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 111,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2006:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2005:16:0"
            },
            "returnParameters": {
              "id": 116,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 115,
                  "mutability": "mutable",
                  "name": "success",
                  "nodeType": "VariableDeclaration",
                  "scope": 137,
                  "src": "2038:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 114,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2038:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2037:14:0"
            },
            "scope": 199,
            "src": "1991:278:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 144,
              "nodeType": "Block",
              "src": "2331:137:0",
              "statements": [
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 142,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2459:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 141,
                  "id": 143,
                  "nodeType": "Return",
                  "src": "2452:11:0"
                }
              ]
            },
            "functionSelector": "87c545af",
            "id": 145,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "terminate_staking",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 138,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2298:2:0"
            },
            "returnParameters": {
              "id": 141,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 140,
                  "mutability": "mutable",
                  "name": "success",
                  "nodeType": "VariableDeclaration",
                  "scope": 145,
                  "src": "2317:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 139,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2317:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2316:14:0"
            },
            "scope": 199,
            "src": "2272:196:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 163,
              "nodeType": "Block",
              "src": "2867:115:0",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 153,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 150,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "2875:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 151,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "2875:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "id": 152,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 35,
                      "src": "2887:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2875:17:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 156,
                  "nodeType": "IfStatement",
                  "src": "2872:39:0",
                  "trueBody": {
                    "id": 155,
                    "nodeType": "Block",
                    "src": "2893:18:0",
                    "statements": [
                      {
                        "functionReturnParameters": 149,
                        "id": 154,
                        "nodeType": "Return",
                        "src": "2899:7:0"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 161,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 157,
                      "name": "stakingContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33,
                      "src": "2921:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_StakingContract_$26",
                        "typeString": "contract StakingContract"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 159,
                          "name": "_staking_address",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 147,
                          "src": "2955:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 158,
                        "name": "StakingContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26,
                        "src": "2939:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_StakingContract_$26_$",
                          "typeString": "type(contract StakingContract)"
                        }
                      },
                      "id": 160,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2939:33:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_StakingContract_$26",
                        "typeString": "contract StakingContract"
                      }
                    },
                    "src": "2921:51:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_StakingContract_$26",
                      "typeString": "contract StakingContract"
                    }
                  },
                  "id": 162,
                  "nodeType": "ExpressionStatement",
                  "src": "2921:51:0"
                }
              ]
            },
            "functionSelector": "c5eb2f68",
            "id": 164,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "link_staking_farm",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 148,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 147,
                  "mutability": "mutable",
                  "name": "_staking_address",
                  "nodeType": "VariableDeclaration",
                  "scope": 164,
                  "src": "2835:24:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 146,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2835:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2834:26:0"
            },
            "returnParameters": {
              "id": 149,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2867:0:0"
            },
            "scope": 199,
            "src": "2808:174:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 180,
              "nodeType": "Block",
              "src": "3041:73:0",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 172,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 169,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "3049:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 170,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "3049:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "id": 171,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 35,
                      "src": "3061:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3049:17:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 175,
                  "nodeType": "IfStatement",
                  "src": "3046:39:0",
                  "trueBody": {
                    "id": 174,
                    "nodeType": "Block",
                    "src": "3067:18:0",
                    "statements": [
                      {
                        "functionReturnParameters": 168,
                        "id": 173,
                        "nodeType": "Return",
                        "src": "3073:7:0"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 178,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 176,
                      "name": "daiToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 31,
                      "src": "3089:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_DaiToken_$2758",
                        "typeString": "contract DaiToken"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 177,
                      "name": "_daiToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 166,
                      "src": "3100:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_DaiToken_$2758",
                        "typeString": "contract DaiToken"
                      }
                    },
                    "src": "3089:20:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_DaiToken_$2758",
                      "typeString": "contract DaiToken"
                    }
                  },
                  "id": 179,
                  "nodeType": "ExpressionStatement",
                  "src": "3089:20:0"
                }
              ]
            },
            "functionSelector": "20789a8e",
            "id": 181,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "link_protocol_token",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 167,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 166,
                  "mutability": "mutable",
                  "name": "_daiToken",
                  "nodeType": "VariableDeclaration",
                  "scope": 181,
                  "src": "3014:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_DaiToken_$2758",
                    "typeString": "contract DaiToken"
                  },
                  "typeName": {
                    "id": 165,
                    "name": "DaiToken",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 2758,
                    "src": "3014:8:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_DaiToken_$2758",
                      "typeString": "contract DaiToken"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3013:20:0"
            },
            "returnParameters": {
              "id": 168,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3041:0:0"
            },
            "scope": 199,
            "src": "2985:129:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 197,
              "nodeType": "Block",
              "src": "3169:112:0",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 187,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 184,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "3177:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 185,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "3177:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "id": 186,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 35,
                      "src": "3189:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3177:17:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 190,
                  "nodeType": "IfStatement",
                  "src": "3174:39:0",
                  "trueBody": {
                    "id": 189,
                    "nodeType": "Block",
                    "src": "3195:18:0",
                    "statements": [
                      {
                        "functionReturnParameters": 183,
                        "id": 188,
                        "nodeType": "Return",
                        "src": "3201:7:0"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 195,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 191,
                      "name": "staking_interation_counter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 40,
                      "src": "3217:26:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 194,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 192,
                        "name": "staking_interation_counter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40,
                        "src": "3246:26:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "hexValue": "31",
                        "id": 193,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3275:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "src": "3246:30:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3217:59:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 196,
                  "nodeType": "ExpressionStatement",
                  "src": "3217:59:0"
                }
              ]
            },
            "functionSelector": "9b048358",
            "id": 198,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "update_staking_interation_counter",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 182,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3159:2:0"
            },
            "returnParameters": {
              "id": 183,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3169:0:0"
            },
            "scope": 199,
            "src": "3117:164:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 200,
        "src": "555:2736:0"
      }
    ],
    "src": "0:3291:0"
  },
  "legacyAST": {
    "absolutePath": "/C/Users/Bofan/defi_tutorial/src/contracts/AutoStaking.sol",
    "exportedSymbols": {
      "Address": [
        698
      ],
      "AutoStaking": [
        199
      ],
      "Context": [
        496
      ],
      "DaiToken": [
        2758
      ],
      "IERC20": [
        281
      ],
      "ISwapRouter": [
        1680
      ],
      "IUniswapV2Factory": [
        940
      ],
      "IUniswapV2Pair": [
        1180
      ],
      "IUniswapV2Router01": [
        1486
      ],
      "IUniswapV2Router02": [
        1571
      ],
      "IUniswapV3SwapCallback": [
        1583
      ],
      "Ownable": [
        879
      ],
      "SafeMath": [
        475
      ],
      "StakingContract": [
        26
      ],
      "TokenFarm_pointer": [
        1686
      ]
    },
    "id": 200,
    "license": "Unlicensed",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.7",
          ".6"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:0"
      },
      {
        "id": 2,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "93:33:0"
      },
      {
        "absolutePath": "/C/Users/Bofan/defi_tutorial/src/contracts/DaiToken.sol",
        "file": "./DaiToken.sol",
        "id": 3,
        "nodeType": "ImportDirective",
        "scope": 200,
        "sourceUnit": 2759,
        "src": "128:24:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "interface",
        "fullyImplemented": false,
        "id": 26,
        "linearizedBaseContracts": [
          26
        ],
        "name": "StakingContract",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "functionSelector": "cfbf8fbf",
            "id": 8,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "transfer_tax_to_reward_pool",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 8,
                  "src": "284:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "284:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "283:14:0"
            },
            "returnParameters": {
              "id": 7,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "306:0:0"
            },
            "scope": 26,
            "src": "247:60:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "functionSelector": "8222cf20",
            "id": 11,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "collect_staker_rewards",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "341:2:0"
            },
            "returnParameters": {
              "id": 10,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "352:0:0"
            },
            "scope": 26,
            "src": "310:43:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "functionSelector": "45c15b42",
            "id": 18,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "add_stake_charity_allocation",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 16,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 18,
                  "src": "394:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "394:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15,
                  "mutability": "mutable",
                  "name": "selected_charity_id",
                  "nodeType": "VariableDeclaration",
                  "scope": 18,
                  "src": "408:24:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 14,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "408:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "393:40:0"
            },
            "returnParameters": {
              "id": 17,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "442:0:0"
            },
            "scope": 26,
            "src": "356:87:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "functionSelector": "448f42e1",
            "id": 25,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "remove_stake_charity_allocation",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 23,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 20,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 25,
                  "src": "487:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 19,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "487:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 22,
                  "mutability": "mutable",
                  "name": "selected_charity_id",
                  "nodeType": "VariableDeclaration",
                  "scope": 25,
                  "src": "501:24:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 21,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "501:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "486:40:0"
            },
            "returnParameters": {
              "id": 24,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "535:0:0"
            },
            "scope": 26,
            "src": "446:90:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 200,
        "src": "214:325:0"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 199,
        "linearizedBaseContracts": [
          199
        ],
        "name": "AutoStaking",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "06fdde03",
            "id": 29,
            "mutability": "mutable",
            "name": "name",
            "nodeType": "VariableDeclaration",
            "scope": 199,
            "src": "580:34:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 27,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "580:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "hexValue": "4175746f5374616b696e67",
              "id": 28,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "601:13:0",
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_b17fba57d7b77fdedbc019df5f36c9ec73803b658eadfa09530c61085d022dcb",
                "typeString": "literal_string \"AutoStaking\""
              },
              "value": "AutoStaking"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "be22f546",
            "id": 31,
            "mutability": "mutable",
            "name": "daiToken",
            "nodeType": "VariableDeclaration",
            "scope": 199,
            "src": "618:24:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_DaiToken_$2758",
              "typeString": "contract DaiToken"
            },
            "typeName": {
              "id": 30,
              "name": "DaiToken",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2758,
              "src": "618:8:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_DaiToken_$2758",
                "typeString": "contract DaiToken"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "ee99205c",
            "id": 33,
            "mutability": "mutable",
            "name": "stakingContract",
            "nodeType": "VariableDeclaration",
            "scope": 199,
            "src": "646:38:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_StakingContract_$26",
              "typeString": "contract StakingContract"
            },
            "typeName": {
              "id": 32,
              "name": "StakingContract",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 26,
              "src": "646:15:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_StakingContract_$26",
                "typeString": "contract StakingContract"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "8da5cb5b",
            "id": 35,
            "mutability": "mutable",
            "name": "owner",
            "nodeType": "VariableDeclaration",
            "scope": 199,
            "src": "688:20:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 34,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "688:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 38,
            "libraryName": {
              "id": 36,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 475,
              "src": "718:8:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$475",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "712:27:0",
            "typeName": {
              "id": 37,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "731:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "functionSelector": "0d3e3651",
            "id": 40,
            "mutability": "mutable",
            "name": "staking_interation_counter",
            "nodeType": "VariableDeclaration",
            "scope": 199,
            "src": "742:38:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 39,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "742:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 48,
              "nodeType": "Block",
              "src": "813:28:0",
              "statements": [
                {
                  "expression": {
                    "id": 46,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 43,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 35,
                      "src": "818:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 44,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "826:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 45,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "826:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "818:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 47,
                  "nodeType": "ExpressionStatement",
                  "src": "818:18:0"
                }
              ]
            },
            "id": 49,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 41,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "803:2:0"
            },
            "returnParameters": {
              "id": 42,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "813:0:0"
            },
            "scope": 199,
            "src": "792:49:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 92,
              "nodeType": "Block",
              "src": "1114:669:0",
              "statements": [
                {
                  "assignments": [
                    55
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 55,
                      "mutability": "mutable",
                      "name": "initialBalance",
                      "nodeType": "VariableDeclaration",
                      "scope": 92,
                      "src": "1476:22:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 54,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1476:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 63,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 60,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "1528:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AutoStaking_$199",
                              "typeString": "contract AutoStaking"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AutoStaking_$199",
                              "typeString": "contract AutoStaking"
                            }
                          ],
                          "id": 59,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1520:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 58,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1520:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 61,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1520:13:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 56,
                        "name": "daiToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31,
                        "src": "1501:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_DaiToken_$2758",
                          "typeString": "contract DaiToken"
                        }
                      },
                      "id": 57,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1900,
                      "src": "1501:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 62,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1501:33:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1476:58:0"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 64,
                        "name": "stakingContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33,
                        "src": "1539:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_StakingContract_$26",
                          "typeString": "contract StakingContract"
                        }
                      },
                      "id": 66,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "collect_staker_rewards",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11,
                      "src": "1539:38:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 67,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1539:40:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 68,
                  "nodeType": "ExpressionStatement",
                  "src": "1539:40:0"
                },
                {
                  "assignments": [
                    70
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 70,
                      "mutability": "mutable",
                      "name": "post_claim_Balance",
                      "nodeType": "VariableDeclaration",
                      "scope": 92,
                      "src": "1590:26:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 69,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1590:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 78,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 75,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "1646:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AutoStaking_$199",
                              "typeString": "contract AutoStaking"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AutoStaking_$199",
                              "typeString": "contract AutoStaking"
                            }
                          ],
                          "id": 74,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1638:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 73,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1638:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 76,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1638:13:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 71,
                        "name": "daiToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31,
                        "src": "1619:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_DaiToken_$2758",
                          "typeString": "contract DaiToken"
                        }
                      },
                      "id": 72,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1900,
                      "src": "1619:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 77,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1619:33:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1590:62:0"
                },
                {
                  "assignments": [
                    80
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 80,
                      "mutability": "mutable",
                      "name": "collected_amount",
                      "nodeType": "VariableDeclaration",
                      "scope": 92,
                      "src": "1669:24:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 79,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1669:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 85,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 83,
                        "name": "initialBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 55,
                        "src": "1719:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 81,
                        "name": "post_claim_Balance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 70,
                        "src": "1696:18:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 82,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sub",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 325,
                      "src": "1696:22:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 84,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1696:38:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1669:65:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 87,
                        "name": "collected_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80,
                        "src": "1745:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 86,
                      "name": "stake",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 137,
                      "src": "1739:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (uint256) returns (bool)"
                      }
                    },
                    "id": 88,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1739:23:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 89,
                  "nodeType": "ExpressionStatement",
                  "src": "1739:23:0"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 90,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1774:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 53,
                  "id": 91,
                  "nodeType": "Return",
                  "src": "1767:11:0"
                }
              ]
            },
            "functionSelector": "e6f1daf2",
            "id": 93,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "claim_rewards",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 50,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1081:2:0"
            },
            "returnParameters": {
              "id": 53,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 52,
                  "mutability": "mutable",
                  "name": "success",
                  "nodeType": "VariableDeclaration",
                  "scope": 93,
                  "src": "1100:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 51,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1100:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1099:14:0"
            },
            "scope": 199,
            "src": "1059:724:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 109,
              "nodeType": "Block",
              "src": "1849:139:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 103,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 95,
                        "src": "1957:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 104,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1965:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 100,
                        "name": "stakingContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33,
                        "src": "1909:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_StakingContract_$26",
                          "typeString": "contract StakingContract"
                        }
                      },
                      "id": 102,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "remove_stake_charity_allocation",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25,
                      "src": "1909:47:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256) external"
                      }
                    },
                    "id": 105,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1909:58:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 106,
                  "nodeType": "ExpressionStatement",
                  "src": "1909:58:0"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 107,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1979:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 99,
                  "id": 108,
                  "nodeType": "Return",
                  "src": "1972:11:0"
                }
              ]
            },
            "functionSelector": "2e17de78",
            "id": 110,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "unstake",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 96,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 95,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 110,
                  "src": "1803:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 94,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1803:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1802:16:0"
            },
            "returnParameters": {
              "id": 99,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 98,
                  "mutability": "mutable",
                  "name": "success",
                  "nodeType": "VariableDeclaration",
                  "scope": 110,
                  "src": "1835:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 97,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1835:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1834:14:0"
            },
            "scope": 199,
            "src": "1786:202:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 136,
              "nodeType": "Block",
              "src": "2052:217:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 122,
                            "name": "stakingContract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33,
                            "src": "2135:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_StakingContract_$26",
                              "typeString": "contract StakingContract"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_StakingContract_$26",
                              "typeString": "contract StakingContract"
                            }
                          ],
                          "id": 121,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2127:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 120,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2127:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 123,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2127:24:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 124,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 112,
                        "src": "2153:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 117,
                        "name": "daiToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31,
                        "src": "2110:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_DaiToken_$2758",
                          "typeString": "contract DaiToken"
                        }
                      },
                      "id": 119,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2025,
                      "src": "2110:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 125,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2110:50:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 126,
                  "nodeType": "ExpressionStatement",
                  "src": "2110:50:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 130,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 112,
                        "src": "2238:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 131,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2246:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 127,
                        "name": "stakingContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33,
                        "src": "2193:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_StakingContract_$26",
                          "typeString": "contract StakingContract"
                        }
                      },
                      "id": 129,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "add_stake_charity_allocation",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 18,
                      "src": "2193:44:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256) external"
                      }
                    },
                    "id": 132,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2193:55:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 133,
                  "nodeType": "ExpressionStatement",
                  "src": "2193:55:0"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 134,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2260:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 116,
                  "id": 135,
                  "nodeType": "Return",
                  "src": "2253:11:0"
                }
              ]
            },
            "functionSelector": "a694fc3a",
            "id": 137,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "stake",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 113,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 112,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 137,
                  "src": "2006:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 111,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2006:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2005:16:0"
            },
            "returnParameters": {
              "id": 116,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 115,
                  "mutability": "mutable",
                  "name": "success",
                  "nodeType": "VariableDeclaration",
                  "scope": 137,
                  "src": "2038:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 114,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2038:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2037:14:0"
            },
            "scope": 199,
            "src": "1991:278:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 144,
              "nodeType": "Block",
              "src": "2331:137:0",
              "statements": [
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 142,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2459:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 141,
                  "id": 143,
                  "nodeType": "Return",
                  "src": "2452:11:0"
                }
              ]
            },
            "functionSelector": "87c545af",
            "id": 145,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "terminate_staking",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 138,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2298:2:0"
            },
            "returnParameters": {
              "id": 141,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 140,
                  "mutability": "mutable",
                  "name": "success",
                  "nodeType": "VariableDeclaration",
                  "scope": 145,
                  "src": "2317:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 139,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2317:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2316:14:0"
            },
            "scope": 199,
            "src": "2272:196:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 163,
              "nodeType": "Block",
              "src": "2867:115:0",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 153,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 150,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "2875:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 151,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "2875:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "id": 152,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 35,
                      "src": "2887:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2875:17:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 156,
                  "nodeType": "IfStatement",
                  "src": "2872:39:0",
                  "trueBody": {
                    "id": 155,
                    "nodeType": "Block",
                    "src": "2893:18:0",
                    "statements": [
                      {
                        "functionReturnParameters": 149,
                        "id": 154,
                        "nodeType": "Return",
                        "src": "2899:7:0"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 161,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 157,
                      "name": "stakingContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33,
                      "src": "2921:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_StakingContract_$26",
                        "typeString": "contract StakingContract"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 159,
                          "name": "_staking_address",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 147,
                          "src": "2955:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 158,
                        "name": "StakingContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26,
                        "src": "2939:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_StakingContract_$26_$",
                          "typeString": "type(contract StakingContract)"
                        }
                      },
                      "id": 160,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2939:33:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_StakingContract_$26",
                        "typeString": "contract StakingContract"
                      }
                    },
                    "src": "2921:51:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_StakingContract_$26",
                      "typeString": "contract StakingContract"
                    }
                  },
                  "id": 162,
                  "nodeType": "ExpressionStatement",
                  "src": "2921:51:0"
                }
              ]
            },
            "functionSelector": "c5eb2f68",
            "id": 164,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "link_staking_farm",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 148,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 147,
                  "mutability": "mutable",
                  "name": "_staking_address",
                  "nodeType": "VariableDeclaration",
                  "scope": 164,
                  "src": "2835:24:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 146,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2835:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2834:26:0"
            },
            "returnParameters": {
              "id": 149,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2867:0:0"
            },
            "scope": 199,
            "src": "2808:174:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 180,
              "nodeType": "Block",
              "src": "3041:73:0",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 172,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 169,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "3049:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 170,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "3049:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "id": 171,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 35,
                      "src": "3061:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3049:17:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 175,
                  "nodeType": "IfStatement",
                  "src": "3046:39:0",
                  "trueBody": {
                    "id": 174,
                    "nodeType": "Block",
                    "src": "3067:18:0",
                    "statements": [
                      {
                        "functionReturnParameters": 168,
                        "id": 173,
                        "nodeType": "Return",
                        "src": "3073:7:0"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 178,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 176,
                      "name": "daiToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 31,
                      "src": "3089:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_DaiToken_$2758",
                        "typeString": "contract DaiToken"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 177,
                      "name": "_daiToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 166,
                      "src": "3100:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_DaiToken_$2758",
                        "typeString": "contract DaiToken"
                      }
                    },
                    "src": "3089:20:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_DaiToken_$2758",
                      "typeString": "contract DaiToken"
                    }
                  },
                  "id": 179,
                  "nodeType": "ExpressionStatement",
                  "src": "3089:20:0"
                }
              ]
            },
            "functionSelector": "20789a8e",
            "id": 181,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "link_protocol_token",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 167,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 166,
                  "mutability": "mutable",
                  "name": "_daiToken",
                  "nodeType": "VariableDeclaration",
                  "scope": 181,
                  "src": "3014:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_DaiToken_$2758",
                    "typeString": "contract DaiToken"
                  },
                  "typeName": {
                    "id": 165,
                    "name": "DaiToken",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 2758,
                    "src": "3014:8:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_DaiToken_$2758",
                      "typeString": "contract DaiToken"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3013:20:0"
            },
            "returnParameters": {
              "id": 168,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3041:0:0"
            },
            "scope": 199,
            "src": "2985:129:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 197,
              "nodeType": "Block",
              "src": "3169:112:0",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 187,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 184,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "3177:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 185,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "3177:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "id": 186,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 35,
                      "src": "3189:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3177:17:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 190,
                  "nodeType": "IfStatement",
                  "src": "3174:39:0",
                  "trueBody": {
                    "id": 189,
                    "nodeType": "Block",
                    "src": "3195:18:0",
                    "statements": [
                      {
                        "functionReturnParameters": 183,
                        "id": 188,
                        "nodeType": "Return",
                        "src": "3201:7:0"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 195,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 191,
                      "name": "staking_interation_counter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 40,
                      "src": "3217:26:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 194,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 192,
                        "name": "staking_interation_counter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40,
                        "src": "3246:26:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "hexValue": "31",
                        "id": 193,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3275:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "src": "3246:30:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3217:59:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 196,
                  "nodeType": "ExpressionStatement",
                  "src": "3217:59:0"
                }
              ]
            },
            "functionSelector": "9b048358",
            "id": 198,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "update_staking_interation_counter",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 182,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3159:2:0"
            },
            "returnParameters": {
              "id": 183,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3169:0:0"
            },
            "scope": 199,
            "src": "3117:164:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 200,
        "src": "555:2736:0"
      }
    ],
    "src": "0:3291:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.7.6+commit.7338295f.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {},
      "links": {},
      "address": "0xd29942053B3201EF49439B6247e30C0c4fB309f3",
      "transactionHash": "0xc272324bdf8323bd71487ce439114dadfe63d3e36eddf8b54279e5fc995bc8d6"
    }
  },
  "schemaVersion": "3.2.3",
  "updatedAt": "2021-08-28T16:07:26.082Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}